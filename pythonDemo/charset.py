#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# 由于Python源代码也是一个文本文件，所以，当你的源代码中包含中文的时候，在保存源代码时，就需要务必指定保存为UTF-8编码。
# 当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行

# 第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；
# 第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。
# 申明了UTF-8编码并不意味着你的.py文件就是UTF-8编码的，必须并且要确保文本编辑器正在使用UTF-8 without BOM编码：

# 如果.py文件本身使用UTF-8编码，并且也申明了# -*- coding: utf-8 -*-，打开命令提示符测试就可以正常显示中文：


# =========================================================================================


# 字符
# 在目前最新的Python 3版本中，字符串是以Unicode编码的

# =========================================================================================
# 对于单个字符的编码，Python提供了ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符：
# a = ord('a')
# A = ord('A')
# z = ord('中')
# w = ord('文')
# print(a, '-- ord')
# print(A, '-- ord')
# print(z, '-- ord')
# print(w, '-- ord')

# aa = chr(97)
# AA = chr(65)
# zz = chr(20013)
# print(aa, '-- chr')
# print(AA, '-- chr')
# print(zz, '-- chr')

# zw = '\u4e2d\u6578' == '中文'
# print(zw)



# =========================================================================================
# 由于Python的字符串类型是str，在内存中以Unicode表示，一个字符对应若干个字节。
# 如果要在网络上传输，或者保存到磁盘上，就需要把str变为以字节为单位的bytes。

# ************************* Python对bytes类型的数据用带b前缀的单引号或双引号表示：*************************

# 以Unicode表示的str通过encode()方法可以编码为指定的bytes
# ABC = 'ABC'.encode('ascii')
# print(ABC)

# zw = '中文'.encode('utf-8')
# print(zw)
# deZw = b'\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8')
# print(deZw)

# 纯英文的str可以用ASCII编码为bytes，内容是一样的，含有中文的str可以用UTF-8编码为bytes。

# 含有中文的str无法用ASCII编码，因为中文编码的范围超过了ASCII编码的范围，Python会报错。
# z = '中'.encode('ascii')
# print(z)                    # 这里会报错

# 在bytes中，无法显示为ASCII字符的字节，用\x##显示。

# 反过来，如果我们从网络或磁盘上读取了字节流，那么读到的数据就是bytes。要把bytes变为str，就需要用decode()方法：
# abc = b'ABC'.decode('ascii')
# print(abc)



# =========================================================================================
# len()函数, 计算str包含多少个字符
# l1 = len('abc')
# zw = len('中文')

# len()函数计算的是str的字符数，如果换成bytes，len()函数就计算字节数：
# le1 = len(b'ABC')
# le2 = len(b'\xe4\xb8\xad\xe6\x96\x87')
# print(le1)
# print(le2)


# =========================================================================================
print('中文测试正常')





















